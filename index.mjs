// src/redis/schema.ts
import { z } from "zod";
var zRawRaidTweetMini = z.object({
  n: z.string(),
  // name
  sn: z.string(),
  // screen_name
  en: z.string(),
  // enemy_name
  ui: z.number(),
  // user_id
  ti: z.number(),
  // tweet_id
  bi: z.string(),
  // battle_id
  lv: z.string(),
  // level
  l: z.enum(["en", "ja"]),
  // language
  t: z.number(),
  // time
  c: z.string().optional()
  // comment
});
var zRaidTweetMini = z.object({
  n: z.string(),
  // name
  sn: z.string(),
  // screen_name
  ui: z.number(),
  // user_id
  ti: z.number(),
  // tweet_id
  bi: z.string(),
  // battle_id
  ei: z.number(),
  // enemy_id(-1はリスト外)
  lv: z.string().optional(),
  // level
  en: z.string().optional(),
  // enemy_name
  l: z.enum(["en", "ja"]),
  // language
  t: z.number(),
  // time
  ft: z.number(),
  // first time(初回投稿時間)
  c: z.string().optional()
  // comment
});

// src/utils/schema.ts
import { z as z2 } from "zod";
var EnemyElement = {
  None: 0,
  Fire: 1,
  Water: 2,
  Earch: 3,
  Wind: 4,
  Light: 5,
  Dark: 6
};
var zGbsListItem = z2.object({
  id: z2.number(),
  attr: z2.nativeEnum(EnemyElement),
  ja: z2.string(),
  en: z2.string(),
  image: z2.string().nullable(),
  level: z2.string(),
  tags: z2.array(z2.string())
});
var zGbsList = z2.array(zGbsListItem);

// src/utils/index.ts
var utils_default = {};
export {
  EnemyElement,
  utils_default as default,
  zGbsList,
  zGbsListItem,
  zRaidTweetMini
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vZ2JzLW9wZW4vc3JjL3JlZGlzL3NjaGVtYS50cyIsICIuLi9nYnMtb3Blbi9zcmMvdXRpbHMvc2NoZW1hLnRzIiwgIi4uL2dicy1vcGVuL3NyYy91dGlscy9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUmF3UmFpZFR3ZWV0IH0gZnJvbSAnQC90d2VldC9yZWNlaXZlcic7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuLyoqXG4gKiBSZWRpc1x1OTAwMVx1NEZFMVx1NzUyOFx1MzA2RVx1NjU4N1x1NUI1N1x1NjU3MFx1MzA5Mlx1NjI5MVx1MzA0OFx1MzA1RlJhaWRUd2VldFxuICovXG5leHBvcnQgY29uc3QgelJhd1JhaWRUd2VldE1pbmkgPSB6Lm9iamVjdCh7XG4gIG46IHouc3RyaW5nKCksIC8vIG5hbWVcbiAgc246IHouc3RyaW5nKCksIC8vIHNjcmVlbl9uYW1lXG4gIGVuOiB6LnN0cmluZygpLCAvLyBlbmVteV9uYW1lXG4gIHVpOiB6Lm51bWJlcigpLCAvLyB1c2VyX2lkXG4gIHRpOiB6Lm51bWJlcigpLCAvLyB0d2VldF9pZFxuICBiaTogei5zdHJpbmcoKSwgLy8gYmF0dGxlX2lkXG4gIGx2OiB6LnN0cmluZygpLCAvLyBsZXZlbFxuICBsOiB6LmVudW0oWydlbicsICdqYSddKSwgLy8gbGFuZ3VhZ2VcbiAgdDogei5udW1iZXIoKSwgLy8gdGltZVxuICBjOiB6LnN0cmluZygpLm9wdGlvbmFsKCksIC8vIGNvbW1lbnRcbn0pO1xuZXhwb3J0IHR5cGUgUmF3UmFpZFR3ZWV0TWluaSA9IHouaW5mZXI8dHlwZW9mIHpSYXdSYWlkVHdlZXRNaW5pPjtcblxuZXhwb3J0IGZ1bmN0aW9uIG1pbmlmeVJhd1JhaWRUd2VldCh0d2VldDogUmF3UmFpZFR3ZWV0KTogUmF3UmFpZFR3ZWV0TWluaSB7XG4gIHJldHVybiB7XG4gICAgbjogdHdlZXQubmFtZSxcbiAgICBzbjogdHdlZXQuc2NyZWVuX25hbWUsXG4gICAgZW46IHR3ZWV0LmVuZW15X25hbWUsXG4gICAgdWk6IHR3ZWV0LnVzZXJfaWQsXG4gICAgdGk6IHR3ZWV0LnR3ZWV0X2lkLFxuICAgIGJpOiB0d2VldC5iYXR0bGVfaWQsXG4gICAgbHY6IHR3ZWV0LmxldmVsLFxuICAgIGw6IHR3ZWV0Lmxhbmd1YWdlLFxuICAgIHQ6IHR3ZWV0LnRpbWUsXG4gICAgYzogdHdlZXQuY29tbWVudCxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVucGFja1Jhd1JhaWRUd2VldE1pbmkobWluaTogUmF3UmFpZFR3ZWV0TWluaSk6IFJhd1JhaWRUd2VldCB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogbWluaS5uLFxuICAgIHNjcmVlbl9uYW1lOiBtaW5pLnNuLFxuICAgIGVuZW15X25hbWU6IG1pbmkuZW4sXG4gICAgdXNlcl9pZDogbWluaS51aSxcbiAgICB0d2VldF9pZDogbWluaS50aSxcbiAgICBiYXR0bGVfaWQ6IG1pbmkuYmksXG4gICAgbGV2ZWw6IG1pbmkubHYsXG4gICAgbGFuZ3VhZ2U6IG1pbmkubCxcbiAgICB0aW1lOiBtaW5pLnQsXG4gICAgY29tbWVudDogbWluaS5jLFxuICB9O1xufVxuXG4vKipcbiAqIFx1NUI5Rlx1OTY5Qlx1MzA2Qlx1OTE0RFx1NEZFMVx1MzA1NVx1MzA4Q1x1MzA4Qlx1MzBDNFx1MzBBNFx1MzBGQ1x1MzBDOFx1MzBDN1x1MzBGQ1x1MzBCRlxuICovXG5leHBvcnQgY29uc3QgelJhaWRUd2VldE1pbmkgPSB6Lm9iamVjdCh7XG4gIG46IHouc3RyaW5nKCksIC8vIG5hbWVcbiAgc246IHouc3RyaW5nKCksIC8vIHNjcmVlbl9uYW1lXG4gIHVpOiB6Lm51bWJlcigpLCAvLyB1c2VyX2lkXG4gIHRpOiB6Lm51bWJlcigpLCAvLyB0d2VldF9pZFxuICBiaTogei5zdHJpbmcoKSwgLy8gYmF0dGxlX2lkXG4gIGVpOiB6Lm51bWJlcigpLCAvLyBlbmVteV9pZCgtMVx1MzA2Rlx1MzBFQVx1MzBCOVx1MzBDOFx1NTkxNilcbiAgbHY6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gbGV2ZWxcbiAgZW46IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gZW5lbXlfbmFtZVxuICBsOiB6LmVudW0oWydlbicsICdqYSddKSwgLy8gbGFuZ3VhZ2VcbiAgdDogei5udW1iZXIoKSwgLy8gdGltZVxuICBmdDogei5udW1iZXIoKSwgLy8gZmlyc3QgdGltZShcdTUyMURcdTU2REVcdTYyOTVcdTdBM0ZcdTY2NDJcdTk1OTMpXG4gIGM6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gY29tbWVudFxufSk7XG5leHBvcnQgdHlwZSBSYWlkVHdlZXRNaW5pID0gei5pbmZlcjx0eXBlb2YgelJhaWRUd2VldE1pbmk+O1xuIiwgImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEVuZW15RWxlbWVudCA9IHtcclxuICBOb25lOiAwLFxyXG4gIEZpcmU6IDEsXHJcbiAgV2F0ZXI6IDIsXHJcbiAgRWFyY2g6IDMsXHJcbiAgV2luZDogNCxcclxuICBMaWdodDogNSxcclxuICBEYXJrOiA2LFxyXG59IGFzIGNvbnN0O1xyXG5cclxuZXhwb3J0IGNvbnN0IHpHYnNMaXN0SXRlbSA9IHoub2JqZWN0KHtcclxuICBpZDogei5udW1iZXIoKSxcclxuICBhdHRyOiB6Lm5hdGl2ZUVudW0oRW5lbXlFbGVtZW50KSxcclxuICBqYTogei5zdHJpbmcoKSxcclxuICBlbjogei5zdHJpbmcoKSxcclxuICBpbWFnZTogei5zdHJpbmcoKS5udWxsYWJsZSgpLFxyXG4gIGxldmVsOiB6LnN0cmluZygpLFxyXG4gIHRhZ3M6IHouYXJyYXkoei5zdHJpbmcoKSksXHJcbn0pO1xyXG5leHBvcnQgdHlwZSBHYnNMaXN0SXRlbSA9IHouaW5mZXI8dHlwZW9mIHpHYnNMaXN0SXRlbT47XHJcblxyXG5leHBvcnQgY29uc3Qgekdic0xpc3QgPSB6LmFycmF5KHpHYnNMaXN0SXRlbSk7XHJcbmV4cG9ydCB0eXBlIEdic0xpc3QgPSB6LmluZmVyPHR5cGVvZiB6R2JzTGlzdD47XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5lbXlEYXRhKGVuZW15SWQ6IG51bWJlciwgbGlzdDogR2JzTGlzdCkge1xyXG4gIHJldHVybiBsaXN0LmZpbmQoKGVuZW15KSA9PiBlbmVteS5pZCA9PT0gZW5lbXlJZCkgPz8gbnVsbDtcclxufVxyXG4iLCAiLy8gXHU1OTE2XHU5MEU4XHU1NDExXHUzMDUxXHUzMDZFZXhwb3J0KFx1NEUzQlx1MzA2Qlx1NTc4Qlx1MzA2OFx1MzBEMVx1MzBGQ1x1MzBCNVx1MzBGQylcblxuZXhwb3J0IHsgUmFpZFR3ZWV0TWluaSB9IGZyb20gJ0AvcmVkaXMvc2NoZW1hJztcbmV4cG9ydCB7IHpSYWlkVHdlZXRNaW5pIH0gZnJvbSAnQC9yZWRpcy9zY2hlbWEnO1xuZXhwb3J0IHtcbiAgekdic0xpc3QsXG4gIHpHYnNMaXN0SXRlbSxcbiAgR2JzTGlzdCxcbiAgR2JzTGlzdEl0ZW0sXG4gIEVuZW15RWxlbWVudCxcbn0gZnJvbSAnLi9zY2hlbWEnO1xuXG5leHBvcnQgZGVmYXVsdCB7fTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFDQSxTQUFTLFNBQVM7QUFLWCxJQUFNLG9CQUFvQixFQUFFLE9BQU87QUFBQSxFQUN4QyxHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixHQUFHLEVBQUUsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBQUE7QUFBQSxFQUN0QixHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQTtBQUN6QixDQUFDO0FBb0NNLElBQU0saUJBQWlCLEVBQUUsT0FBTztBQUFBLEVBQ3JDLEdBQUcsRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNaLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUztBQUFBO0FBQUEsRUFDeEIsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTO0FBQUE7QUFBQSxFQUN4QixHQUFHLEVBQUUsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBQUE7QUFBQSxFQUN0QixHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQTtBQUN6QixDQUFDOzs7QUNsRUQsU0FBUyxLQUFBQSxVQUFTO0FBRVgsSUFBTSxlQUFlO0FBQUEsRUFDMUIsTUFBTTtBQUFBLEVBQ04sTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsT0FBTztBQUFBLEVBQ1AsTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsTUFBTTtBQUNSO0FBRU8sSUFBTSxlQUFlQSxHQUFFLE9BQU87QUFBQSxFQUNuQyxJQUFJQSxHQUFFLE9BQU87QUFBQSxFQUNiLE1BQU1BLEdBQUUsV0FBVyxZQUFZO0FBQUEsRUFDL0IsSUFBSUEsR0FBRSxPQUFPO0FBQUEsRUFDYixJQUFJQSxHQUFFLE9BQU87QUFBQSxFQUNiLE9BQU9BLEdBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQSxFQUMzQixPQUFPQSxHQUFFLE9BQU87QUFBQSxFQUNoQixNQUFNQSxHQUFFLE1BQU1BLEdBQUUsT0FBTyxDQUFDO0FBQzFCLENBQUM7QUFHTSxJQUFNLFdBQVdBLEdBQUUsTUFBTSxZQUFZOzs7QUNYNUMsSUFBTyxnQkFBUSxDQUFDOyIsCiAgIm5hbWVzIjogWyJ6Il0KfQo=