"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }// src/redis/schema.ts
var _zod = require('zod');
var zRawRaidTweetMini = _zod.z.object({
  n: _zod.z.string(),
  // name
  sn: _zod.z.string(),
  // screen_name
  en: _zod.z.string(),
  // enemy_name
  ui: _zod.z.string(),
  // user_id
  ti: _zod.z.string(),
  // tweet_id
  bi: _zod.z.string(),
  // battle_id
  lv: _zod.z.string(),
  // level
  l: _zod.z.enum(["en", "ja"]),
  // language
  t: _zod.z.number(),
  // time
  et: _zod.z.number(),
  // elapsed_time
  c: _zod.z.string().optional()
  // comment
});
var zRaidTweetMini = _zod.z.object({
  n: _zod.z.string(),
  // name
  sn: _zod.z.string(),
  // screen_name
  ui: _zod.z.string(),
  // user_id
  ti: _zod.z.string(),
  // tweet_id
  bi: _zod.z.string(),
  // battle_id
  ei: _zod.z.number(),
  // enemy_id(-1はリスト外)
  lv: _zod.z.string().optional(),
  // level
  en: _zod.z.string().optional(),
  // enemy_name
  l: _zod.z.enum(["en", "ja"]),
  // language
  t: _zod.z.number(),
  // time
  et: _zod.z.number(),
  // elapsed_time
  ft: _zod.z.number(),
  // first time(初回投稿時間)
  c: _zod.z.string().optional()
  // comment
});

// src/utils/schema.ts

var EnemyElement = {
  None: 0,
  Fire: 1,
  Water: 2,
  Earch: 3,
  Wind: 4,
  Light: 5,
  Dark: 6
};
var zGbsListItem = _zod.z.object({
  id: _zod.z.number(),
  attr: _zod.z.nativeEnum(EnemyElement),
  ja: _zod.z.string(),
  en: _zod.z.string(),
  image: _zod.z.string().nullable(),
  level: _zod.z.string(),
  tags: _zod.z.array(_zod.z.string())
});
var zGbsList = _zod.z.array(zGbsListItem);
function getEnemyData(enemyId, list) {
  return _nullishCoalesce(list.find((enemy) => enemy.id === enemyId), () => ( null));
}

// src/utils/index.ts
var utils_default = {};







exports.EnemyElement = EnemyElement; exports.default = utils_default; exports.getEnemyData = getEnemyData; exports.zGbsList = zGbsList; exports.zGbsListItem = zGbsListItem; exports.zRaidTweetMini = zRaidTweetMini;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2dicy1vcGVuL3NyYy9yZWRpcy9zY2hlbWEudHMiLCIuLi9nYnMtb3Blbi9zcmMvdXRpbHMvc2NoZW1hLnRzIiwiLi4vZ2JzLW9wZW4vc3JjL3V0aWxzL2luZGV4LnRzIl0sIm5hbWVzIjpbInoiXSwibWFwcGluZ3MiOiI7QUFDQSxTQUFTLFNBQVM7QUFLWCxJQUFNLG9CQUFvQixFQUFFLE9BQU87QUFBQSxFQUN4QyxHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixHQUFHLEVBQUUsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBQUE7QUFBQSxFQUN0QixHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQTtBQUN6QixDQUFDO0FBcURNLElBQU0saUJBQWlCLEVBQUUsT0FBTztBQUFBLEVBQ3JDLEdBQUcsRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNaLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPO0FBQUE7QUFBQSxFQUNiLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUztBQUFBO0FBQUEsRUFDeEIsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTO0FBQUE7QUFBQSxFQUN4QixHQUFHLEVBQUUsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBQUE7QUFBQSxFQUN0QixHQUFHLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDWixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixJQUFJLEVBQUUsT0FBTztBQUFBO0FBQUEsRUFDYixHQUFHLEVBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQTtBQUN6QixDQUFDOzs7QUNyRkQsU0FBUyxLQUFBQSxVQUFTO0FBRVgsSUFBTSxlQUFlO0FBQUEsRUFDMUIsTUFBTTtBQUFBLEVBQ04sTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsT0FBTztBQUFBLEVBQ1AsTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsTUFBTTtBQUNSO0FBRU8sSUFBTSxlQUFlQSxHQUFFLE9BQU87QUFBQSxFQUNuQyxJQUFJQSxHQUFFLE9BQU87QUFBQSxFQUNiLE1BQU1BLEdBQUUsV0FBVyxZQUFZO0FBQUEsRUFDL0IsSUFBSUEsR0FBRSxPQUFPO0FBQUEsRUFDYixJQUFJQSxHQUFFLE9BQU87QUFBQSxFQUNiLE9BQU9BLEdBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQSxFQUMzQixPQUFPQSxHQUFFLE9BQU87QUFBQSxFQUNoQixNQUFNQSxHQUFFLE1BQU1BLEdBQUUsT0FBTyxDQUFDO0FBQzFCLENBQUM7QUFHTSxJQUFNLFdBQVdBLEdBQUUsTUFBTSxZQUFZO0FBR3JDLFNBQVMsYUFBYSxTQUFpQixNQUFlO0FBQzNELFNBQU8sS0FBSyxLQUFLLENBQUMsVUFBVSxNQUFNLE9BQU8sT0FBTyxLQUFLO0FBQ3ZEOzs7QUNmQSxJQUFPLGdCQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSYXdSYWlkVHdlZXQgfSBmcm9tICdAL3R3ZWV0L3JlY2VpdmVyJztcbmltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG4vKipcbiAqIFJlZGlz6YCB5L+h55So44Gu5paH5a2X5pWw44KS5oqR44GI44GfUmFpZFR3ZWV0XG4gKi9cbmV4cG9ydCBjb25zdCB6UmF3UmFpZFR3ZWV0TWluaSA9IHoub2JqZWN0KHtcbiAgbjogei5zdHJpbmcoKSwgLy8gbmFtZVxuICBzbjogei5zdHJpbmcoKSwgLy8gc2NyZWVuX25hbWVcbiAgZW46IHouc3RyaW5nKCksIC8vIGVuZW15X25hbWVcbiAgdWk6IHouc3RyaW5nKCksIC8vIHVzZXJfaWRcbiAgdGk6IHouc3RyaW5nKCksIC8vIHR3ZWV0X2lkXG4gIGJpOiB6LnN0cmluZygpLCAvLyBiYXR0bGVfaWRcbiAgbHY6IHouc3RyaW5nKCksIC8vIGxldmVsXG4gIGw6IHouZW51bShbJ2VuJywgJ2phJ10pLCAvLyBsYW5ndWFnZVxuICB0OiB6Lm51bWJlcigpLCAvLyB0aW1lXG4gIGV0OiB6Lm51bWJlcigpLCAvLyBlbGFwc2VkX3RpbWVcbiAgYzogei5zdHJpbmcoKS5vcHRpb25hbCgpLCAvLyBjb21tZW50XG59KTtcblxuLyoqXG4gKiDlr77lv5xcXFxuICogbjogbmFtZVxcXG4gKiBzbjogc2NyZWVfbmFtZVxcXG4gKiBlbjogZW5lbXlfbmFtZVxcXG4gKiB1aTogdXNlcl9pZFxcXG4gKiB0aTogdHdlZXRfaWRcXFxuICogYmk6IGJhdHRsZV9pZFxcXG4gKiBsdjogbGV2ZWxcXFxuICogbDogbGFuZ3VhZ2VcXFxuICogdDogdGltZVxcXG4gKiBldDogZWxhcHNlZF90aW1lXFxcbiAqIGM6IGNvbW1lbnRcbiAqL1xuZXhwb3J0IHR5cGUgUmF3UmFpZFR3ZWV0TWluaSA9IHouaW5mZXI8dHlwZW9mIHpSYXdSYWlkVHdlZXRNaW5pPjtcblxuZXhwb3J0IGZ1bmN0aW9uIG1pbmlmeVJhd1JhaWRUd2VldCh0d2VldDogUmF3UmFpZFR3ZWV0KTogUmF3UmFpZFR3ZWV0TWluaSB7XG4gIHJldHVybiB7XG4gICAgbjogdHdlZXQubmFtZSxcbiAgICBzbjogdHdlZXQuc2NyZWVuX25hbWUsXG4gICAgZW46IHR3ZWV0LmVuZW15X25hbWUsXG4gICAgdWk6IHR3ZWV0LnVzZXJfaWQsXG4gICAgdGk6IHR3ZWV0LnR3ZWV0X2lkLFxuICAgIGJpOiB0d2VldC5iYXR0bGVfaWQsXG4gICAgbHY6IHR3ZWV0LmxldmVsLFxuICAgIGw6IHR3ZWV0Lmxhbmd1YWdlLFxuICAgIHQ6IHR3ZWV0LnRpbWUsXG4gICAgZXQ6IHR3ZWV0LmVsYXBzZWRfdGltZSxcbiAgICBjOiB0d2VldC5jb21tZW50LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5wYWNrUmF3UmFpZFR3ZWV0TWluaShtaW5pOiBSYXdSYWlkVHdlZXRNaW5pKTogUmF3UmFpZFR3ZWV0IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBtaW5pLm4sXG4gICAgc2NyZWVuX25hbWU6IG1pbmkuc24sXG4gICAgZW5lbXlfbmFtZTogbWluaS5lbixcbiAgICB1c2VyX2lkOiBtaW5pLnVpLFxuICAgIHR3ZWV0X2lkOiBtaW5pLnRpLFxuICAgIGJhdHRsZV9pZDogbWluaS5iaSxcbiAgICBsZXZlbDogbWluaS5sdixcbiAgICBsYW5ndWFnZTogbWluaS5sLFxuICAgIHRpbWU6IG1pbmkudCxcbiAgICBjb21tZW50OiBtaW5pLmMsXG4gICAgZWxhcHNlZF90aW1lOiBtaW5pLmV0LFxuICB9O1xufVxuXG4vKipcbiAqIOWun+mam+OBq+mFjeS/oeOBleOCjOOCi+ODhOOCpOODvOODiOODh+ODvOOCv1xuICovXG5leHBvcnQgY29uc3QgelJhaWRUd2VldE1pbmkgPSB6Lm9iamVjdCh7XG4gIG46IHouc3RyaW5nKCksIC8vIG5hbWVcbiAgc246IHouc3RyaW5nKCksIC8vIHNjcmVlbl9uYW1lXG4gIHVpOiB6LnN0cmluZygpLCAvLyB1c2VyX2lkXG4gIHRpOiB6LnN0cmluZygpLCAvLyB0d2VldF9pZFxuICBiaTogei5zdHJpbmcoKSwgLy8gYmF0dGxlX2lkXG4gIGVpOiB6Lm51bWJlcigpLCAvLyBlbmVteV9pZCgtMeOBr+ODquOCueODiOWklilcbiAgbHY6IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gbGV2ZWxcbiAgZW46IHouc3RyaW5nKCkub3B0aW9uYWwoKSwgLy8gZW5lbXlfbmFtZVxuICBsOiB6LmVudW0oWydlbicsICdqYSddKSwgLy8gbGFuZ3VhZ2VcbiAgdDogei5udW1iZXIoKSwgLy8gdGltZVxuICBldDogei5udW1iZXIoKSwgLy8gZWxhcHNlZF90aW1lXG4gIGZ0OiB6Lm51bWJlcigpLCAvLyBmaXJzdCB0aW1lKOWIneWbnuaKleeov+aZgumWkylcbiAgYzogei5zdHJpbmcoKS5vcHRpb25hbCgpLCAvLyBjb21tZW50XG59KTtcblxuLyoqXG4gKiDlr77lv5xcXFxuICogbjogbmFtZVxcXG4gKiBzbjogc2NyZWVfbmFtZVxcXG4gKiB1aTogdXNlcl9pZFxcXG4gKiB0aTogdHdlZXRfaWRcXFxuICogYmk6IGJhdHRsZV9pZFxcXG4gKiBlaTogZW5lbXlfaWQoLTHjga/jg6rjgrnjg4jlpJYpXFxcbiAqIGw6IGxhbmd1YWdlXFxcbiAqIHQ6IHRpbWVcXFxuICogZnQ6IGZpcnN0X3RpbWUo5Yid5Zue5oqV56i/5pmC6ZaTXFxcbiAqIGM6IGNvbW1lbnRcXFxuICog44Oq44K544OI5aSW44Gu44G/6L+95YqgXFxcbiAqIGVuPzogZW5lbXlfbmFtZVxcXG4gKiBsdj86IGxldmVsXG4gKi9cbmV4cG9ydCB0eXBlIFJhaWRUd2VldE1pbmkgPSB6LmluZmVyPHR5cGVvZiB6UmFpZFR3ZWV0TWluaT47XG4iLCJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcclxuXHJcbmV4cG9ydCBjb25zdCBFbmVteUVsZW1lbnQgPSB7XHJcbiAgTm9uZTogMCxcclxuICBGaXJlOiAxLFxyXG4gIFdhdGVyOiAyLFxyXG4gIEVhcmNoOiAzLFxyXG4gIFdpbmQ6IDQsXHJcbiAgTGlnaHQ6IDUsXHJcbiAgRGFyazogNixcclxufSBhcyBjb25zdDtcclxuXHJcbmV4cG9ydCBjb25zdCB6R2JzTGlzdEl0ZW0gPSB6Lm9iamVjdCh7XHJcbiAgaWQ6IHoubnVtYmVyKCksXHJcbiAgYXR0cjogei5uYXRpdmVFbnVtKEVuZW15RWxlbWVudCksXHJcbiAgamE6IHouc3RyaW5nKCksXHJcbiAgZW46IHouc3RyaW5nKCksXHJcbiAgaW1hZ2U6IHouc3RyaW5nKCkubnVsbGFibGUoKSxcclxuICBsZXZlbDogei5zdHJpbmcoKSxcclxuICB0YWdzOiB6LmFycmF5KHouc3RyaW5nKCkpLFxyXG59KTtcclxuZXhwb3J0IHR5cGUgR2JzTGlzdEl0ZW0gPSB6LmluZmVyPHR5cGVvZiB6R2JzTGlzdEl0ZW0+O1xyXG5cclxuZXhwb3J0IGNvbnN0IHpHYnNMaXN0ID0gei5hcnJheSh6R2JzTGlzdEl0ZW0pO1xyXG5leHBvcnQgdHlwZSBHYnNMaXN0ID0gei5pbmZlcjx0eXBlb2Ygekdic0xpc3Q+O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEVuZW15RGF0YShlbmVteUlkOiBudW1iZXIsIGxpc3Q6IEdic0xpc3QpIHtcclxuICByZXR1cm4gbGlzdC5maW5kKChlbmVteSkgPT4gZW5lbXkuaWQgPT09IGVuZW15SWQpID8/IG51bGw7XHJcbn1cclxuIiwiLy8g5aSW6YOo5ZCR44GR44GuZXhwb3J0KOS4u+OBq+Wei+OBqOODkeODvOOCteODvClcblxuZXhwb3J0IHsgUmFpZFR3ZWV0TWluaSB9IGZyb20gJ0AvcmVkaXMvc2NoZW1hJztcbmV4cG9ydCB7IHpSYWlkVHdlZXRNaW5pIH0gZnJvbSAnQC9yZWRpcy9zY2hlbWEnO1xuZXhwb3J0IHtcbiAgekdic0xpc3QsXG4gIHpHYnNMaXN0SXRlbSxcbiAgR2JzTGlzdCxcbiAgR2JzTGlzdEl0ZW0sXG4gIEVuZW15RWxlbWVudCxcbiAgZ2V0RW5lbXlEYXRhLFxufSBmcm9tICcuL3NjaGVtYSc7XG5cbmV4cG9ydCBkZWZhdWx0IHt9O1xuIl19